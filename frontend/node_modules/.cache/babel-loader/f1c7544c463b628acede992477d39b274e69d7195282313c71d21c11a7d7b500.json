{"ast":null,"code":"import{useState,useEffect}from\"react\";import axios from\"axios\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function Contact(){const[email,setEmail]=useState('');const[message,setMessage]=useState('');const[error,setError]=useState('');const[selectData,setSelectData]=useState([]);const[selectValue,setSelectValue]=useState('');useEffect(()=>{let processing=true;axiosFetchData(processing);return()=>{processing=false;};},[]);// this code shows how to use the React fetch http for GET and POST\n// const fetchData = async(processing) => {\n//     const options = {\n//         method: 'POST',\n//         headers: {'Content-type': 'application/json'},\n//         body: JSON.stringify({\n//             email: email,\n//             message: message\n//         })\n//     }\n//\n//     await fetch('https://jsonplaceholder.typicode.com/users')\n//     .then(res => res.json())\n//     .then(data => {\n//         if (processing) {\n//             setSelectData(data)\n//         }\n//     })\n//     .catch(err => console.log(err))\n// }\nconst axiosFetchData=async processing=>{await axios.get('http://localhost:4000/users').then(res=>{if(processing){setSelectData(res.data);}}).catch(err=>console.log(err));};const axiosPostData=async()=>{const postData={email:email,website:selectValue,message:message};await axios.post('http://localhost:4000/contact/send',postData).then(res=>setError(/*#__PURE__*/_jsx(\"p\",{className:\"success\",children:res.data})));};const SelectDropdown=()=>{return/*#__PURE__*/_jsxs(\"select\",{value:selectValue,onChange:e=>setSelectValue(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\" -- Select One -- \"},\"none\"),selectData===null||selectData===void 0?void 0:selectData.map(item=>/*#__PURE__*/_jsx(\"option\",{value:item.website,children:item.website},item.website))]});};const handleSubmit=e=>{e.preventDefault();if(!message){setError(/*#__PURE__*/_jsx(\"p\",{className:\"required\",children:\"Message is empty. Please type a message.\"}));}else{setError('');axiosPostData();}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Contact Us\"}),/*#__PURE__*/_jsxs(\"form\",{className:\"contactForm\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Email\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"email\",name:\"email\",value:email,onChange:e=>setEmail(e.target.value)}),/*#__PURE__*/_jsx(\"label\",{children:\"How Did You Hear About Us?\"}),/*#__PURE__*/_jsx(SelectDropdown,{}),/*#__PURE__*/_jsx(\"label\",{children:\"Message\"}),/*#__PURE__*/_jsx(\"textarea\",{id:\"message\",name:\"message\",value:message,onChange:e=>setMessage(e.target.value)}),error,/*#__PURE__*/_jsx(\"button\",{type:\"submit\",onClick:handleSubmit,children:\"Submit\"})]})]});}export default Contact;","map":{"version":3,"names":["useState","useEffect","axios","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Contact","email","setEmail","message","setMessage","error","setError","selectData","setSelectData","selectValue","setSelectValue","processing","axiosFetchData","get","then","res","data","catch","err","console","log","axiosPostData","postData","website","post","className","children","SelectDropdown","value","onChange","e","target","map","item","handleSubmit","preventDefault","type","id","name","onClick"],"sources":["/root/ReactJS_with_backend_and_frontend/frontend/src/pages/Contact.js"],"sourcesContent":["import { useState, useEffect } from \"react\"\nimport axios from \"axios\"\n\nfunction Contact() {\n    const [email, setEmail] = useState('')\n    const [message, setMessage] = useState('')\n    const [error, setError] = useState('')\n    const [selectData, setSelectData] = useState([])\n    const [selectValue, setSelectValue] = useState('')\n\n    useEffect( () => {\n        let processing = true\n        axiosFetchData(processing)\n        return () => {\n            processing = false\n        }\n    },[])\n\n    // this code shows how to use the React fetch http for GET and POST\n    // const fetchData = async(processing) => {\n    //     const options = {\n    //         method: 'POST',\n    //         headers: {'Content-type': 'application/json'},\n    //         body: JSON.stringify({\n    //             email: email,\n    //             message: message\n    //         })\n    //     }\n    //\n    //     await fetch('https://jsonplaceholder.typicode.com/users')\n    //     .then(res => res.json())\n    //     .then(data => {\n    //         if (processing) {\n    //             setSelectData(data)\n    //         }\n    //     })\n    //     .catch(err => console.log(err))\n    // }\n\n    const axiosFetchData = async(processing) => {\n        await axios.get('http://localhost:4000/users')\n        .then(res => {\n            if (processing) {\n                setSelectData(res.data)\n            }\n        })\n        .catch(err => console.log(err))\n    }\n\n    const axiosPostData = async() => {\n        const postData = {\n            email: email,\n            website: selectValue,\n            message: message\n        }\n\n        await axios.post('http://localhost:4000/contact/send', postData)\n        .then(res => setError(<p className=\"success\">{res.data}</p>))\n    }\n\n    const SelectDropdown = () => {\n        return (\n            <select value={selectValue} onChange={(e) => setSelectValue(e.target.value)}>\n                <option value=\"\" key=\"none\"> -- Select One -- </option>\n                {\n                    selectData?.map( (item) => (\n                        <option value={item.website} key={item.website}>{item.website}</option>\n                    ))\n                }\n            </select>\n        )\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n        if (!message) {\n            setError(<p className=\"required\">Message is empty. Please type a message.</p>)\n        } else {\n            setError('')\n            axiosPostData()\n        }\n    }\n\n    return (\n        <>\n            <h1>Contact Us</h1>\n\n            <form className=\"contactForm\">\n                <label>Email</label>\n                <input type=\"text\" id=\"email\" name=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} />\n\n                <label>How Did You Hear About Us?</label>\n                <SelectDropdown />\n\n                <label>Message</label>\n                <textarea id=\"message\" name=\"message\" value={message} onChange={(e) => setMessage(e.target.value)}></textarea>\n                \n                {error}\n\n                <button type=\"submit\" onClick={handleSubmit}>Submit</button>\n            </form>\n        </>\n    )\n}\n\nexport default Contact"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}